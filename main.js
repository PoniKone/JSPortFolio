"use strict";
const CHRHEIGHT = 9//キャラの高さ
const CHRWIDTH = 8//キャラの幅
const FONT = "12px monospace"//使用フォント
const FONTSTYLE = "#ffffff"//文字色
const HEIGHT = 120;//仮想画面サイズ高さ
const WIDTH = 128;//仮想画面サイズ幅
const INTERVAL = 33;//フレーム呼び出し間隔
const MAP_WIDTH = 64;//マップ幅
const MAP_HEIGHT = 64;//マップ高さ
const SCR_WIDTH = 8;//画面タイルサイズの半分の幅
const SCR_HEIGHT = 8;//画面タイルサイズの半分の高さ
const SCROLL = 1;//スクロール速度
const SMOOTH = 0;//補完処理
const START_HP = 20;//開始HP
const STARTX = 30//開始位置x
const STARTY = 33//開始位置y
const TILESIZE = 8;//タイルサイズ(ドット)
const TILECOLUMN = 4;//タイル桁数
const TILEROW = 4;//タイル行数
const WNDSTYLE = "rgba( 0, 0, 0, 0.75)";//ウィンドウの色
const gKey = new Uint8Array( 0x100 );//キー入力バッファ

let gAngle = 0;//プレイヤーの向き
let gEx = 0;//プレイヤーの経験値
let gHP = START_HP;//プレイヤーのHP
let gMHP = START_HP;//プレイヤーの最大HP
let POWER = 1;//力
let UPPOWER;//力の上昇量
let DEF = 1;//身の守り
let UPDEF;//身の守り上昇量
let gLv = 1;//プレイヤーのレベル
let gLvCount = 0;//レベルアップカウント
let gCursor = 0;//カーソル位置
let gEnemyType;//敵種別
let gScreen;//仮想画面
let gFrame = 0;//内部カウンタ
let gMessage1 = null;//表示メッセージ1
let gMessage2 = null;//表示メッセージ2
let gMoveX = 0//移動量X
let gMoveY = 0//移動量Y
let gOrder;//行動順
let gImgBoss;//画像ラスボス
let gImgMap;//画像マップ
let gImgMonster;//画像モンスター
let gItem = 0;//アイテムの有無 
let gPhase = 0;//戦闘フェーズ
let gImgPlayer;//画像プレイヤー
let gPlayerX = STARTX * TILESIZE + TILESIZE /2;//プレイヤー座標X
let gPlayerY = STARTY * TILESIZE + TILESIZE /2;//プレイヤー座標Y
let gWidth;//実画面の幅
let gHeight;//実画面の高さ
let gEnemyHP;//戦闘画面での敵HP
let UPHP;//HP上昇

const gFileBoss = "img/boss.png";
const gFileMap = "img/map.png";
const gFileMonster = "img/monster.png";
const gFilePlayer = "img/player.png";

const gEncounter = [ 0, 0, 0, 1, 0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0];//エンカウント確率

const gMonsterName = ["スライム","殺人うさぎ","彷徨う騎士","べビドラ", "べスライム", "一角獣", "魔族騎士", "チビドラ", "ドスライム", "ブルドラ", "竜騎士", "魔王の使い", "闇勇者","魔王"];//モンスター名称

const gMonsterHP = [ 5, 8, 13, 30, 20, 30, 40, 50, 50, 70, 100, 155, 300, 999];//モンスターのHP

const gMonsterATK = [ 1, 2, 5, 7, 9, 11, 15, 18, 22, 23, 25, 30, 40, 45];//モンスターの攻撃力

const gMonsterEXP = [ 1, 3, 7, 11, 20, 32, 44, 60, 80, 100, 140, 200, gEx, 0];//モンスターの経験値
//マップ
const gMap = [
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 3, 3, 6, 6, 3, 3, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 3, 3, 6, 6, 3, 3, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0,
 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 6, 6, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 3, 3, 6, 6, 6,13, 6, 6, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 6, 6, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 3, 3, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0,
 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 0, 0, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0,
 0, 0, 3, 3, 3, 3, 3, 3,10,11, 3, 3, 3, 3, 6, 6, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 0, 0, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 7, 7, 2, 2, 7, 7, 6, 6, 3, 3, 1, 1, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 7, 7, 2, 2, 7, 7, 6, 6, 3, 3, 1, 1, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 7, 7, 2, 2, 7, 7, 6, 6, 3, 3, 1, 1, 3, 3, 3, 3, 6, 6, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 7, 7, 2, 2, 7, 7, 6, 6, 3, 3, 1, 1, 3, 3, 3, 3, 6, 6, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 7, 7, 7, 7, 7, 7, 6, 6, 3, 3, 1, 1, 1, 1, 3, 3, 3, 3, 6, 6, 3, 3, 3, 3, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 7, 7, 7, 7, 7, 7, 6, 6, 3, 3, 1, 1, 1, 1, 3, 3, 3, 3, 6, 6, 3, 3, 3, 3, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 6, 6, 3, 3, 1, 1, 1, 1, 3, 3, 3, 3, 6, 6, 3, 3, 3, 3, 0, 0, 3, 3, 3,12, 3, 3, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 6, 6, 3, 3, 1, 1, 1, 1, 3, 3, 3, 3, 6, 6, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 6, 6, 3, 3, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 6, 6, 3, 3, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 4, 5, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 8, 9, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 3, 3, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 3, 3, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 3, 3, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 6, 6, 3, 3, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,14, 6, 6, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 7, 7, 7,15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
];

//戦闘行動処理
function Action()
{
	gPhase++//フェーズ経過

	if(((gPhase + gOrder) & 1) == 0){
		let d = GetDamage( gMonsterATK[gEnemyType] + Math.floor(Math.random() * 2 - Math.random() * 2));//ダメージ計算式
		d -=  Math.floor(DEF / 5 - Math.floor(DEF * Math.random() / 5))
		if( d < 1 ){
			d = 1;//ダメージの最低値を設定
		}
		SetMessage( gMonsterName[ gEnemyType ] +"の攻撃!", d + "のダメージ！")
		gHP -= d;//プレイヤーのHP減少
		if(gHP <=　0){//プレイヤーのHPが0
			gHP = 0;
			gPhase = 8;

		}
		return;
	}

	if( gCursor == 0){//「たたかう」選択時
	const d = GetDamage( POWER + 1);//ダメージ計算結果取得
	gEnemyHP -= d;//敵のHP減少
	SetMessage("あなたの攻撃！", d + " のダメージ！");
	if(gEnemyHP <= 0){
	gPhase = 5;
}
	return;
	}
//「にげる」選択時
	if(Math.random() < 0.5){//逃げる成功時
	SetMessage("あなたは逃げ出した",null);
	gPhase = 7;
	return;
}
//逃げる失敗時
	SetMessage("あなたは逃げ出した","しかし回り込まれた");
	return;
}

//経験値加算
function AddExp()
{
	 gEx += gMonsterEXP[gEnemyType];//経験値加算
	 while( gLv * (gLv + 1) * 2  <= gEx ){//レベルアップ条件を満たしている場合
	 	gLv++;//レベルアップ
		UPHP = 4 + Math.floor(Math.random() * 3)
	 	gMHP += UPHP;//最大HP上昇
	 	UPPOWER = 1 + Math.floor(Math.random() * 2);
	 	POWER += UPPOWER;
	 	UPDEF = Math.floor( 0.5 + Math.random() * 2.2)
	 	DEF += UPDEF;
	 	gLvCount = 1
	 }
}




//敵出現処理
function AppearEnemy(t) {
	gPhase = 1;//敵出現フェーズ
	gEnemyType = t;
	gEnemyHP = gMonsterHP[gEnemyType];//敵のHP読み取り
	SetMessage(gMonsterName[gEnemyType] + "が現れた！",null)
}


//戦闘コマンド
function CommandFight(){
	gPhase = 2 //戦闘コマンド選択フェーズ
	gCursor = 0;//デフォルトでたたかうを選択
	SetMessage("　たたかう","　にげる")
}

//戦闘画面描画処理
function DrawBattle(g)
{
	g.fillStyle = "#000000";//背景色
	g.fillRect(0,0,WIDTH,HEIGHT);//画面全体を矩形描画

	if( gPhase == 1 || gPhase == 2 || gPhase == 3 || gPhase == 4 || gPhase == 5 || gPhase == 8 || gPhase == 9){//敵が生存している場合

	if(IsBoss()){//敵がラスボスの場合
	g.drawImage(gImgBoss, WIDTH / 2 - gImgBoss.width / 2 , HEIGHT / 2 - gImgBoss.height / 2);
	}else{
	let w = gImgMonster.width / 13;
	let h = gImgMonster.height
	g.drawImage(gImgMonster, gEnemyType *  w, 0, w, h, Math.floor(WIDTH / 2 - w / 2) , Math.floor(HEIGHT / 2 - h / 2), w, h );
	}
}

//ステータスウィンドウ
	DrawMessage( g )//	メッセージ描画
	DrawStatus(g);//ステータス画面

	if(gPhase == 2){//戦闘フェーズがコマンド選択中の場合
	g.fillText("⇒", 6, 96 + 14 * gCursor);//カーソル描画
	}
}
//フィールド画面描画処理
function DrawField(g)
{
		let mx = Math.floor( gPlayerX / TILESIZE);//プレイヤーのタイル座標x
	let my = Math.floor( gPlayerY / TILESIZE);//プレイヤーのタイル座標y




	for(let dy = -SCR_HEIGHT; dy <= SCR_HEIGHT; dy++ ){
		let ty = my + dy;//タイル座標y
		let py = ( ty + MAP_HEIGHT ) % MAP_HEIGHT;//ループ後タイル座標y
		for(let dx = -SCR_WIDTH; dx <= SCR_WIDTH ; dx++ ){
			let tx = mx + dx;//タイル座標x
			let px = ( tx + MAP_WIDTH ) % MAP_WIDTH;//ループ後タイル座標x
			DrawTile( g,
					  tx * TILESIZE + WIDTH  / 2 - gPlayerX,
					  ty * TILESIZE + HEIGHT / 2 - gPlayerY,
					  gMap[ py * MAP_WIDTH + px] );
		}
	}


	// g.fillStyle = "#ff0000";
	// g.fillRect( 0, HEIGHT / 2 - 1, WIDTH, 2 );
	// g.fillRect( WIDTH / 2 - 1, 0, 2, HEIGHT );//デバッグ用座標線

//プレイヤー
	g.drawImage( gImgPlayer,
				 (gFrame >> 4 & 1 ) * CHRWIDTH, gAngle * CHRHEIGHT, CHRWIDTH, CHRHEIGHT, 
				 WIDTH / 2 - CHRWIDTH / 2, HEIGHT / 2 - CHRHEIGHT + TILESIZE / 2, CHRWIDTH, CHRHEIGHT);
//ステータスウィンドウ
	g.fillStyle = WNDSTYLE;//ウィンドウの色
	g.fillRect( 2, 2, 70, 37);//矩形描画
	DrawMessage( g )//	メッセージ描画
	DrawStatus(g);//ステータス画面
}

function DrawMain()
{

	const g = gScreen.getContext("2d");//仮想画面の2d描画コンテキストの取得

	if(gPhase <= 1){
	DrawField(g);//フィールド画面描画
	}else{
	DrawBattle(g);//戦闘画面
	}


//デバッグ画面
// 	g.fillStyle = WNDSTYLE;//ウィンドウの色
// 	g.fillRect( 20, 103, 105, 15);//短形描画

// g.font = FONT;//文字フォントを設定
// g.fillStyle = FONTSTYLE;//文字色
// g.fillText("x=" + gPlayerX + " y=" + gPlayerY + " m=" + gMap[ my * MAP_WIDTH + mx], 25,15);//文字位置
}

//メッセージ描画
function DrawMessage( g )
{
	if(!gMessage1){//メッセージ内容が存在しない場合
		return;
	}

	g.fillStyle = WNDSTYLE;//ウィンドウの色
	g.fillRect( 4, 84, 120, 30);//短形描画

	g.font = FONT
	g.fillStyle = FONTSTYLE



	g.fillText(gMessage1, 6, 96);//1行目
	if(gMessage2){
	g.fillText(gMessage2, 6, 110);//2行目
}
}


//ステータス画面
function DrawStatus(g)
{
	g.font = FONT;//文字フォントを設定
	g.fillStyle = FONTSTYLE;//文字色	
	g.fillText("Lv:" + gLv, 4, 13);//Lv
	g.fillText("HP:" + gHP + "/" +gMHP, 4, 25);//HP
	g.fillText("Ex:" + gEx, 4, 37);//Ex

}

function DrawTile( g, x, y, idx ){
	const ix = ( idx % TILECOLUMN ) * TILESIZE;
	const iy = Math.floor( idx / TILECOLUMN ) * TILESIZE;;
	g.drawImage(　gImgMap, ix, iy, TILESIZE, TILESIZE, x, y , TILESIZE, TILESIZE　);

}

//ダメージ量算出
function GetDamage(a){
	return(Math.floor(a * (1 + Math.random())))
}



function IsBoss(){
	return( gEnemyType == gMonsterName.length - 1) ;
}

function LoadImage(){
	gImgBoss = new Image();	gImgBoss.src = gFileBoss;//ラスボス画像読み込み
	gImgMap = new Image();	gImgMap.src = gFileMap;//マップ画像読み込み
	gImgMonster = new Image();	gImgMonster.src = gFileMonster;//モンスター画像読み込み
	gImgPlayer = new Image();	gImgPlayer.src = gFilePlayer;//プレイヤー画像読み込み
}

function SetMessage(v1,v2)
{
	gMessage1 = v1;
	gMessage2 = v2;
}
function TickField(){

if( gPhase != 0){
	return;
}
	if(gMoveX !=0 || gMoveY != 0 || gMessage1){}//移動中又はメッセージ表示中の場合
	else if(gKey[37]){gAngle = 1; gMoveX = -TILESIZE;}//左
	else if(gKey[38]){gAngle = 3;gMoveY = -TILESIZE;}//上
	else if(gKey[39]){gAngle = 2;gMoveX =  TILESIZE;}//右
	else if(gKey[40]){gAngle = 0;gMoveY =  TILESIZE;}//下


//移動後のタイル座標判定
	let mx = Math.floor((gPlayerX +gMoveX) / TILESIZE);//タイル座標X
	let my = Math.floor((gPlayerY +gMoveY) / TILESIZE);//タイル座標X
	mx += MAP_WIDTH;//マップループ処理X
	mx %= MAP_WIDTH;//マップループ処理X
	my += MAP_HEIGHT;//マップループ処理Y
	my %= MAP_HEIGHT;//マップループ処理Y
	let m = gMap[ my * MAP_WIDTH + mx];//タイル番号
	if(m < 3){
		gMoveX = 0;//移動禁止X
		gMoveY = 0;//移動禁止Y
	}
	if(Math.abs(gMoveX) + Math.abs(gMoveY) == SCROLL){//マス目移動が終わる直前

	
	if(m == 8 || m == 9){//お城
		gHP = gMHP//HP回復
		SetMessage("魔王を倒して！",null)
	}
	if(m == 10 || m == 11){//町
		gHP = gMHP//HP回復
		SetMessage("東の果てにも","村があります")
	}
	if(m == 12){//村
		gHP = gMHP//HP回復
		SetMessage("カギは","洞窟にあります")
	}
	if(m == 13){//洞窟
		gItem = 1;//カギを入手
		SetMessage("カギを手に入れた",null)
	}
	if(m == 14){//扉
		if(gItem == 0){
		gPlayerY -= TILESIZE;//1マス上へ
		SetMessage("カギが必要です",null)
	}else{
		SetMessage("扉が開いた",null)
	}
	}
	if(m == 15){//ボス
		AppearEnemy( gMonsterName.length - 1);
	}
	if(Math.random() * 8< gEncounter[ m ]){//ランダムエンカウント
		let t = Math.abs( gPlayerX / TILESIZE - STARTX) +
				Math.abs( gPlayerY / TILESIZE - STARTY);
		if(m == 6){//マップタイプが林だったら
			t += 8;//敵レベルを0~0.5上昇
		}
		if(m == 7){//マップタイプが山だったら
			t += 16;//敵レベルを1~0.5上昇
		}
		t += Math.random() * 8;//敵レベルを0~0.5上昇
		t = Math.floor(t / 8);
		t = Math.min( t, gMonsterName.length - 2);//上限処理
		if(t>=9){
			if(Math.floor(Math.random() * 501) == 500){
				t=12
			}
		}
		AppearEnemy(t);
	}
}


	gPlayerX += Math.sign(gMoveX) * SCROLL;//プレイヤー座標移動X
	gPlayerY += Math.sign(gMoveY) * SCROLL;//プレイヤー座標移動Y
	gMoveX -= Math.sign(gMoveX) * SCROLL;//移動消費X
	gMoveY -= Math.sign(gMoveY) * SCROLL;//移動消費Y

//マップループ処理
	gPlayerX += (MAP_WIDTH * TILESIZE);
	gPlayerX %= (MAP_WIDTH * TILESIZE);
	gPlayerY += (MAP_HEIGHT * TILESIZE);
	gPlayerY %= (MAP_HEIGHT * TILESIZE);
}

function WmPaint()
{

	DrawMain();

	const ca = document.getElementById("main");//mainキャンバスの要素を取得
	const g = ca.getContext("2d");//2d描画コンテキストの取得

	g.drawImage(gScreen, 0, 0, gScreen.width, gScreen.height, 0, 0, gWidth, gHeight);//仮想画面のイメージを実画面へ転送
}

//ブラウザサイズ変更イベント
function WmSize()
{
	const ca = document.getElementById("main");//mainキャンバスの要素を取得
	ca.width = window.innerWidth;//キャンパスの幅をブラウザの幅へ変更
	ca.height = window.innerHeight;//キャンパスの高さをブラウザの高さへ変更

	const g = ca.getContext("2d");//2d描画コンテキストの取得
	g.imageSmoothingEnabled = g.msImageSmoothingEnabled = SMOOTH//画像補完
//実画面サイズを計測。どっとのアスペクト比を維持したままでの最大サイズを計測
	gWidth = ca.width;
	gHeight = ca.height;
	if(gWidth / WIDTH < gHeight / HEIGHT ){
		gHeight = gWidth * HEIGHT / WIDTH;
	}else{
		gWidth = gHeight * WIDTH / HEIGHT;
	}
}
//タイマーイベント発生時の処理
function WmTimer()
{
	if(!gMessage1){

	gFrame++//内部カウンタを追加
	TickField();//フィールド進行処理		
	}
	WmPaint();
}


//キーボード入力(DOWN)イベント
window.onkeydown = function(ev)
{
	let c = ev.keyCode;//キーコード取得

	if( gKey[c] != 0){//既に押下中の場合(キーリピート)
		return;
	}

	gKey[ c ] = 1;

	if(gPhase == 1){//敵が現れた場合
		CommandFight();//戦闘

		return;
	}

	if(gPhase == 2){//戦闘コマンド選択中の場合
		if( c == 13||c == 90){//Enterキー、又はZキーの場合
			gOrder = Math.floor(Math.random() * 2);//行動順の決定,0 or 1
			Action();//戦闘行動処理
	}else{
		gCursor = 1 - gCursor;//
	}
	return;
}
	if(gPhase == 3){

	Action()//行動処理
	return
}
	if(gPhase == 4){
		CommandFight();//戦闘

		return;
	}

	if(gPhase == 5){
		AddExp();//経験値加算
		SetMessage(gMonsterName[gEnemyType] +"をたおした！",gMonsterEXP[gEnemyType] +"の経験値を獲得！")
		if(gLvCount == 1){
			gPhase = 6
			return;
		}
		gPhase = 7;//マップ移動フェーズへ
		return;
	}
	if(gPhase == 6){
		SetMessage("レベルアップ！","HP+" + UPHP +",力+"+UPPOWER+",身の守り+"+UPDEF)
		gLvCount = 0
		gPhase = 7;//マップ移動フェーズへ
		return;
	}
	if(gPhase == 7){
		if(IsBoss() && gCursor == 0){//敵がラスボスかつたたかう選択時
			SetMessage("魔王を倒し","世界に平和が訪れた");
			return;
		}
		gPhase = 0;//マップ移動フェーズ

	}

	if(gPhase == 8){
		gPhase = 9
		SetMessage("あなたは死にました",null);
		return;
	}
	if(gPhase == 9){
		SetMessage(" G A M E   O V E R",null);
		return;
	}

	gMessage1 = null;
}




//キー入力(UP)イベント
window.onkeyup = function( ev ){
	gKey[ ev.keyCode ] = 0;
}
//ブラウザ起動イベント
window.onload = function()
{
	LoadImage();
	
	gScreen = document.createElement("canvas");//仮想画面を作成
	gScreen.width = WIDTH//仮想画面の幅を設定
	gScreen.height = HEIGHT//仮想画面の高さを設定

	WmSize();//画面サイズ初期化
	window.addEventListener("resize",function(){ WmSize() });//ブラウザサイズ変更時、WmSize()が呼ばれる
	setInterval( function(){ WmTimer() } ,INTERVAL);//33ms間隔で、WmTimer()を呼び出すよう指示(30.3fps)
}
//今後実装したい
//レベルアップ表現
//攻撃エフェクト
//魔法
//メッセージ表記に動きを追加
//エンディングの追加